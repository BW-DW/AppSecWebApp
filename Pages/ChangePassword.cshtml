@page
@model BookWorms.Pages.ChangePasswordModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header">
            <h3>Change Password</h3>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">@TempData["SuccessMessage"]</div>
            }

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }

            <form method="post">
                <div class="form-group">
                    <label asp-for="ChangePassword.OldPassword">Old Password</label>
                    <input asp-for="ChangePassword.OldPassword" class="form-control" required />
                    <span asp-validation-for="ChangePassword.OldPassword" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ChangePassword.NewPassword">New Password</label>
                    <input asp-for="ChangePassword.NewPassword" class="form-control" required id="passwordInput" />
                    <span asp-validation-for="ChangePassword.NewPassword" class="text-danger"></span>

                    <div class="progress mt-2">
                        <div id="passwordStrengthBar" class="progress-bar" role="progressbar" style="width: 0%;"></div>
                    </div>
                    <small id="passwordHelp" class="form-text"></small>
                </div>


                <div class="form-group">
                    <label asp-for="ChangePassword.ConfirmNewPassword">Confirm New Password</label>
                    <input asp-for="ChangePassword.ConfirmNewPassword" class="form-control" required />
                    <span asp-validation-for="ChangePassword.ConfirmNewPassword" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary mt-3">Update Password</button>
                <a asp-page="Index" class="btn btn-secondary mt-3">Cancel</a>
            </form>
        </div>

        <script>
            document.getElementById("passwordInput").addEventListener("input", function () {
                var password = this.value;
                var passwordHelp = document.getElementById("passwordHelp");

                var errors = [];
                if (password.length < 8) errors.push("At least 8 characters required.");
                if (!/[A-Z]/.test(password)) errors.push("At least one uppercase letter required.");
                if (!/[a-z]/.test(password)) errors.push("At least one lowercase letter required.");
                if (!/[0-9]/.test(password)) errors.push("At least one digit required.");
                if (!/[!#$%^&*(),.?":{}|<>]/.test(password)) errors.push("At least one special character required.");

                passwordHelp.innerHTML = errors.length > 0 ? errors.join("<br>") : "Password is valid.";
                passwordHelp.style.color = errors.length > 0 ? "red" : "green";
            });
        </script>

        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var passwordInput = document.getElementById("passwordInput");
                var passwordStrengthText = document.getElementById("passwordHelp");
                var passwordStrengthBar = document.getElementById("passwordStrengthBar");

                passwordInput.addEventListener("input", function () {
                    var password = this.value;
                    var strength = 0;
                    var messages = [];

                    // ✅ Check password strength criteria
                    if (password.length >= 8) strength++;
                    else messages.push("At least 8 characters required.");

                    if (/[A-Z]/.test(password)) strength++;
                    else messages.push("At least one uppercase letter required.");

                    if (/[a-z]/.test(password)) strength++;
                    else messages.push("At least one lowercase letter required.");

                    if (/[0-9]/.test(password)) strength++;
                    else messages.push("At least one digit required.");

                    if (/[!#$%^&*(),.?\":{}|<>]/.test(password)) strength++;
                    else messages.push("At least one special character required.");

                    // ✅ Set password strength feedback
                    var strengthText = "";
                    var strengthColor = "";
                    var strengthWidth = "0%";

                    if (strength === 5) {
                        strengthText = "Strong";
                        strengthColor = "bg-success";
                        strengthWidth = "100%";
                    } else if (strength >= 3) {
                        strengthText = "Moderate";
                        strengthColor = "bg-warning";
                        strengthWidth = "60%";
                    } else {
                        strengthText = "Weak";
                        strengthColor = "bg-danger";
                        strengthWidth = "30%";
                    }

                    passwordStrengthText.innerHTML = messages.length === 0 ? `<strong>${strengthText}</strong>` : messages.join("<br>");
                    passwordStrengthBar.style.width = strengthWidth;
                    passwordStrengthBar.className = `progress-bar ${strengthColor}`;
                });
            });
        </script>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}